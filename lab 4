class CaesarCipher:
    def __init__(self, shift):
        self.shift = shift
    
    def encrypt(self, text):
        # texti kodavorum  Caesari algoritmov 
        result = ""
        for char in text:
            if char.isupper():
                result += chr((ord(char) + self.shift - 65) % 26 + 65)
            elif char.islower():
                result += chr((ord(char) + self.shift - 97) % 26 + 97)
            else:
                result += char
        return result

    def decrypt(self, text):
        # texti apakodavorum Cesari algoritmic
        result = ""
        for char in text:
            if char.isupper():
                result += chr((ord(char) - self.shift - 65 + 26) % 26 + 65)
            elif char.islower():
                result += chr((ord(char) - self.shift - 97 + 26) % 26 + 97)
            else:
                result += char
        return result

if __name__ == "__main__":
    text = input("Enter the text to encrypt: ")
    shift = int(input("Enter the shift value: "))
    cipher = CaesarCipher(shift)

    encrypted = cipher.encrypt(text)
    print(f"Encrypted text: {encrypted}")

    decrypted = cipher.decrypt(encrypted)
    print(f"Decrypted text: {decrypted}")
